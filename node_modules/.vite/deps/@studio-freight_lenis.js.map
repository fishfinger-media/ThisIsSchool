{
  "version": 3,
  "sources": ["../../@studio-freight/lenis/src/maths.js", "../../@studio-freight/lenis/src/animate.js", "../../@studio-freight/lenis/src/dimensions.js", "../../@studio-freight/lenis/src/debounce.js", "../../@studio-freight/lenis/src/emitter.js", "../../@studio-freight/lenis/src/virtual-scroll.js", "../../@studio-freight/lenis/src/index.js", "dep:@studio-freight_lenis"],
  "sourcesContent": ["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n", "import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n\r\n    this.onUpdate?.(this.value, completed)\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(\r\n    from,\r\n    to,\r\n    { lerp = 0.1, duration = 1, easing = (t) => t, onStart, onUpdate }\r\n  ) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    onStart?.()\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n", "import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor({ wrapper, content, autoResize = true } = {}) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (autoResize) {\r\n      const resize = debounce(this.resize, 250)\r\n\r\n      if (this.wrapper !== window) {\r\n        this.wrapperResizeObserver = new ResizeObserver(resize)\r\n        this.wrapperResizeObserver.observe(this.wrapper)\r\n      }\r\n\r\n      this.contentResizeObserver = new ResizeObserver(resize)\r\n      this.contentResizeObserver.observe(this.content)\r\n    }\r\n\r\n    this.resize()\r\n  }\r\n\r\n  destroy() {\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  resize = () => {\r\n    this.onWrapperResize()\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    if (this.wrapper === window) {\r\n      this.width = window.innerWidth\r\n      this.height = window.innerHeight\r\n    } else {\r\n      this.width = this.wrapper.clientWidth\r\n      this.height = this.wrapper.clientHeight\r\n    }\r\n  }\r\n\r\n  onContentResize = () => {\r\n    this.scrollHeight = this.content.scrollHeight\r\n    this.scrollWidth = this.content.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n", "export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n", "export class Emitter {\r\n  constructor() {\r\n    this.events = {}\r\n  }\r\n\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  }\r\n\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.events[event] = this.events[event]?.filter((i) => callback !== i)\r\n  }\r\n\r\n  destroy() {\r\n    this.events = {}\r\n  }\r\n}\r\n", "import { Emitter } from './emitter'\r\nimport { clamp } from './maths'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = new Emitter()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { deltaX, deltaY, event })\r\n  }\r\n}\r\n", "import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { Emitter } from './emitter'\r\nimport { clamp, modulo } from './maths'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explanation\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programmatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [__iosNoInertiaSyncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   * @property {boolean} [autoResize]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper,\r\n    smoothWheel = true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    __iosNoInertiaSyncTouchLerp = 0.4, // should be 1 but had to leave 0.4 for iOS (testing purpose)\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration && 0.1,\r\n    infinite = false,\r\n    orientation = 'vertical', // vertical, horizontal\r\n    gestureOrientation = 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = 1,\r\n    normalizeWheel = false,\r\n    autoResize = true,\r\n  } = {}) {\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      __iosNoInertiaSyncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n      autoResize,\r\n    }\r\n\r\n    this.animate = new Animate()\r\n    this.emitter = new Emitter()\r\n    this.dimensions = new Dimensions({ wrapper, content, autoResize })\r\n    this.toggleClass('lenis', true)\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.destroy()\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n    this.dimensions.destroy()\r\n\r\n    this.toggleClass('lenis', false)\r\n    this.toggleClass('lenis-smooth', false)\r\n    this.toggleClass('lenis-scrolling', false)\r\n    this.toggleClass('lenis-stopped', false)\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    return this.emitter.off(event, callback)\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = event.type.includes('touch')\r\n    const isWheel = event.type.includes('wheel')\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    let composedPath = event.composedPath()\r\n    composedPath = composedPath.slice(0, composedPath.indexOf(this.rootElement)) // remove parents elements\r\n\r\n    if (\r\n      !!composedPath.find(\r\n        (node) =>\r\n          node.hasAttribute?.('data-lenis-prevent') ||\r\n          (isTouch && node.hasAttribute?.('data-lenis-prevent-touch')) ||\r\n          (isWheel && node.hasAttribute?.('data-lenis-prevent-wheel')) ||\r\n          node.classList?.contains('lenis') // nested lenis instance\r\n      )\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const isTouchEnd = isTouch && event.type === 'touchend'\r\n    const hasTouchInertia = isTouchEnd && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia\r\n          ? this.syncTouchLerp\r\n          : this.options.__iosNoInertiaSyncTouchLerp,\r\n      }),\r\n    })\r\n  }\r\n\r\n  resize() {\r\n    this.dimensions.resize()\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.(this)\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onStart: () => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n      },\r\n      onUpdate: (value, completed) => {\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        if (!completed) this.emit()\r\n\r\n        if (completed) {\r\n          // avoid emitting twice (onScroll)\r\n          requestAnimationFrame(() => {\r\n            this.isScrolling = false\r\n            this.velocity = 0\r\n\r\n            if (lock) this.isLocked = false\r\n            this.emit()\r\n            onComplete?.(this)\r\n          })\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? this.options.content\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.dimensions.limit[this.isHorizontal ? 'x' : 'y']\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.__isSmooth = value\r\n      this.toggleClass('lenis-smooth', value)\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.__isScrolling = value\r\n      this.toggleClass('lenis-scrolling', value)\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.__isStopped = value\r\n      this.toggleClass('lenis-stopped', value)\r\n    }\r\n  }\r\n\r\n  get className() {\r\n    let className = 'lenis'\r\n    if (this.isStopped) className += ' lenis-stopped'\r\n    if (this.isScrolling) className += ' lenis-scrolling'\r\n    if (this.isSmooth) className += ' lenis-smooth'\r\n    return className\r\n  }\r\n\r\n  toggleClass(name, value) {\r\n    this.rootElement.classList.toggle(name, value)\r\n    this.emitter.emit('className change', this)\r\n  }\r\n}\r\n", "import d from \"./node_modules/@studio-freight/lenis/dist/lenis.mjs\";export default d;"],
  "mappings": "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",
  "names": ["clamp", "min", "input", "max", "Math", "Animate", "_proto", "prototype", "advance", "deltaTime", "_this$onUpdate", "x", "y", "t", "this", "isRunning", "completed", "lerp", "value", "to", "exp", "round", "currentTime", "linearProgress", "duration", "easedProgress", "easing", "from", "onUpdate", "call", "stop", "fromTo", "_ref", "_ref$lerp", "_ref$duration", "_ref$easing", "onStart", "Dimensions", "_temp", "_this", "callback", "timer", "wrapper", "content", "_ref$autoResize", "autoResize", "resize", "onWrapperResize", "onContentResize", "window", "width", "innerWidth", "height", "innerHeight", "clientWidth", "clientHeight", "scrollHeight", "scrollWidth", "args", "arguments", "context", "clearTimeout", "setTimeout", "apply", "wrapperResizeObserver", "ResizeObserver", "observe", "contentResizeObserver", "destroy", "_this$wrapperResizeOb", "_this$contentResizeOb", "disconnect", "_createClass", "key", "get", "Emitter", "events", "emit", "event", "callbacks", "i", "length", "slice", "on", "cb", "_this$events$event", "push", "_this$events$event2", "filter", "off", "_this$events$event3", "VirtualScroll", "element", "_ref$wheelMultiplier", "wheelMultiplier", "_ref$touchMultiplier", "touchMultiplier", "_ref$normalizeWheel", "normalizeWheel", "onTouchStart", "_ref2", "targetTouches", "clientY", "touchStart", "clientX", "lastDelta", "onTouchMove", "_ref3", "deltaX", "deltaY", "emitter", "onTouchEnd", "onWheel", "addEventListener", "passive", "removeEventListener", "Lenis", "_ref$wrapper", "_ref$content", "document", "documentElement", "_ref$wheelEventsTarge", "wheelEventsTarget", "_ref$smoothWheel", "smoothWheel", "_ref$smoothTouch", "smoothTouch", "_ref$syncTouch", "syncTouch", "_ref$syncTouchLerp", "syncTouchLerp", "_ref$__iosNoInertiaSy", "__iosNoInertiaSyncTouchLerp", "_ref$touchInertiaMult", "touchInertiaMultiplier", "pow", "_ref$infinite", "infinite", "_ref$orientation", "orientation", "_ref$gestureOrientati", "gestureOrientation", "onVirtualScroll", "ctrlKey", "isTouch", "type", "includes", "isWheel", "options", "scroll", "composedPath", "indexOf", "rootElement", "find", "node", "_node$classList", "hasAttribute", "classList", "contains", "isStopped", "isLocked", "preventDefault", "isSmooth", "isScrolling", "animate", "delta", "abs", "hasTouchInertia", "velocity", "scrollTo", "targetScroll", "_extends", "programmatic", "onScroll", "lastScroll", "animatedScroll", "actualScroll", "direction", "sign", "lenisVersion", "body", "dimensions", "toggleClass", "virtualScroll", "setScroll", "isHorizontal", "scrollLeft", "scrollTop", "reset", "start", "raf", "time", "target", "_temp2", "_this2", "_ref3$offset", "offset", "_ref3$immediate", "immediate", "_ref3$lock", "lock", "_ref3$duration", "_ref3$easing", "_ref3$lerp", "_ref3$onComplete", "onComplete", "_ref3$force", "force", "_ref3$programmatic", "limit", "_target", "querySelector", "nodeType", "wrapperRect", "getBoundingClientRect", "left", "top", "rect", "requestAnimationFrame", "name", "toggle", "d", "__isSmooth", "set", "__isScrolling", "__isStopped", "className"]
}
